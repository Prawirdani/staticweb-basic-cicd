# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deployment

on:
  workflow_run:
    workflows: ["Create Release"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '20.x' ]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install
        
    - name: Build the app    
      run: npm run build --if-present
      
    - name: Archive build output
      run: tar -czf dist.tar.gz dist # tar -czf <archive_name>.tar.gz <your build output dir>

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: dist.tar.gz


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Copy files via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist.tar.gz"
          target: "/tmp"

      - name: Extract/Cleanup archive & restart server.
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Adjust target directory as needed, im using nginx as the webserver which the default directory is /var/www/
          # Also adjust the restart command as needed, im using nginx as the webserver which the command is `sudo systemctl restart nginx`
          script: |
            sudo tar -xzf /tmp/dist.tar.gz -C /var/www/
            sudo rm /tmp/dist.tar.gz
            sudo systemctl restart nginx
  













        
